---
layout: post
title: "从《失控》中进化的scrum方法论"
data: 2016-06-26 21:19
comments: true
tags: 想法
---

智能系统大致可以理解为 输入 -> 处理 -> 评估改进 -> 输出 这样流程的重复迭代

这里的系统可以指一个人或团队，公司，以较为熟悉的IT业作为比方。

对产品的管理需要不断的接收用户反馈，调整产品定位与体验，并且持续改进，再次的输入给用户。

对于项目开发，以scrum为例，在每次sprint(迭代周期)都会进行评估改善，
并且按需调整下一次的输入(sprint目标)，而scrum的理论则可以陈述为提升迭代速度从而提升整个系统的反应与灵活性。

简单而言可以把这种流程套入到任何的工作方式(和scrum不谋而合，或许只是相同概念的另一种陈述)，所有的智能系统都有相同的工作方式。

在阅读过一些scrum概念后，联想到了《失控》中的“分布”概念，二者实在是有很多异曲同工之处。

在我理解的scrum是把不同的team(为了陈述方便全以开发为例)作为一个自组织的智能系统，
并且在单个系统进行这种迭代时鼓励不同team开发者互相交流，
外部的参与使得单一系统输入和评估的部分得到了增强(更为可观，多样化)，
并且在一个大的组织内部，这种互相交流的模式也很大的提升了系统输出的利用率(可以作为另外系统的输入)。

甚至可以采用更佳灵活的方式，管理者可以组织各种虚拟团队来解决特定问题，
通过划分出更多的“独立”系统，每个小型系统可以更快的改变/迭代，
而通过人员交流和重组(重组成另外的虚拟团队)使得交换信息更佳畅通，把经验和技术(甚至迭代本身的改进)的价值变得最大化。

跨team的虚拟团队与重组看似混乱，但小的团队往往容易维护，易于沟通，分工明确，并且更好的达成改进的共识。
还有一个好处正是敏捷原则所鼓励的团队成员需多交流，
在不同的虚拟团队，大家通过跨团队的重组来吸收经验。
同时因为虚拟团队的时效性，与现在的团员交流也有助于以后的跨虚拟团队交流。
